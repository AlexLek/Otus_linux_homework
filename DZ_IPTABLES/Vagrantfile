# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
 :inetRouter => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"}
                ]
  },

 :inetRouter2 => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.3', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"}
                ],
	 extForwardedPorts: [{
            guest: 80,
            host: 8080,
        }]
  },


  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"}
         ]
  },

  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"}
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

	config.vm.provider "virtualbox" do |v|
          v.memory = 256
        end

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
	  echo 1 > /proc/sys/net/ipv4/ip_forward
	  for eth in /proc/sys/net/ipv4/conf/*/rp_filter
	  do
		echo 0 > $eth
	  done 
        SHELL

        case boxname.to_s
        when "inetRouter"
	  config.vm.provision "file", source: "./knockd.conf", destination: "~/knockd.conf"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum install -y net-tools
	    sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            ip route add 192.168.0.0/16 via 192.168.255.2
	    for DEV in /proc/sys/net/ipv4/conf/*/rp_filter; do echo 0 > $DEV; done
	    iptables -A INPUT -p tcp --dport 22 -i eth1 -j REJECT
	    rpm -ivh http://li.nux.ro/download/nux/dextop/el7Server/x86_64/knock-server-0.7-1.el7.nux.x86_64.rpm
	    cp /home/vagrant/knockd.conf /etc/knockd.conf
	    service knockd start
	    SHELL
        when "inetRouter2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum install -y net-tools
            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            ip route add 192.168.0.0/16 via 192.168.255.2
	    iptables -t nat -A PREROUTING -p tcp --dport 8080 -j DNAT --to-destination 192.168.0.2:80
            iptables -t nat -A POSTROUTING -p tcp --dst 192.168.0.2 --dport 80 -j SNAT --to-source 192.168.255.3    
	    iptables -A FORWARD -d 192.168.0.2 -p tcp --dport 80 -j ACCEPT
            #for DEV in /proc/sys/net/ipv4/conf/*/rp_filter; do echo 0 > $DEV; done
            SHELL

        when "centralRouter"
	  config.vm.provision "file", source: "./open_ssh.sh", destination: "~/open_ssh.sh"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
	    sysctl net.ipv4.ip_forward=1 #to send packets between interfaces
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
	    systemctl restart network
	    for DEV in /proc/sys/net/ipv4/conf/*/rp_filter; do echo 0 > $DEV; done
	    echo 1 > /proc/sys/net/ipv4/ip_forward
	    yum install -y nmap
            SHELL

        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
	    yum install -y epel-release
	    yum install -y nginx
	    ip r del default
	    ip r add default via 192.168.0.1 dev eth1
            systemctl start nginx
            SHELL

        end

      end

  end


end

